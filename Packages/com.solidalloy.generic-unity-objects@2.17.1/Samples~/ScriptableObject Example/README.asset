%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 3732b7fccbe84e4fa096cfbd2b945f24, type: 3}
  m_Name: README
  m_EditorClassIdentifier: 
  _description: 'The example contains two classes derived from GenericScriptableObject:

    -
    WarriorStats<TClass>

    - WarriorsRelationship<TFirst, TSecond>


    You can
    find them in the GenericScriptableObjects folder.


    You can check the assets
    created from those classes in the "Warrior Stats" and "Relationships" folders.


    To
    create a new asset, press RMB in the Project window -> Create -> WarriorStats<TClass>.
    The asset creation looks a bit different for a generic scriptable object with
    one generic argument, and with multiple arguments, so be sure to check out both
    versions.


    Inside the scripts, you can see how [CreateGenericAssetMenu]
    adds a class to the Assets/Create context menu.


    You can also notice how
    the object picker field has changed in scriptable objects inspector. It contains
    a specific generic type (WarriorStats<Archer>) instead of the short name (WarriorStats`1).'
